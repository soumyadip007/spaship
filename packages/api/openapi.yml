openapi: 3.0.0
info:
  title: SPAship API
  description: The RESTFul API of SPAship
  termsOfService: http://spaship.io/terms/
  contact:
    name: SPAship
    url: http://github.com/spaship/spaship
    email: spaship@redhat.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.1.0
servers:
  - url:
    description: Current server
tags:
  - name: application
    description: Everything about your SPA
  - name: apiKey
    description: Everything about your API Key
  - name: webproperty
    description: Everything about your WebProperty
  - name: event
    description: Analytics for WebProperty
paths:
  /applications/deploy:
    post:
      summary: Create an application entity and upload file
      tags:
        - application
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                path:
                  type: string
                ref:
                  type: string
                upload:
                  type: string
                  format: binary
              required:
                - name
                - path
                - ref
                - upload
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/APIResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Application"
      security:
        - bearerAuth: []
        - api_key: []

  /apiKeys/{propertyName}:
    get:
      summary: Get an API Key
      tags:
        - apiKey
      parameters:
        - name: propertyName
          in: path
          description: PropertyName of API Key to use
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/APIResponse"
      security:
        - bearerAuth: []
  /apiKeys/{propertyName}/{shortKey}:
    get:
      summary: Delete an API Key
      tags:
        - apiKey
      parameters:
        - name: propertyName
          in: path
          description: PropertyName of the API Key
          required: true
          schema:
            type: string
        - name: shortKey
          in: path
          description: Shortkey for the apikey
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/APIResponse"
      security:
        - bearerAuth: []

  /webproperty/get/applications/{propertyName}:
    get:
      summary: Get the list of the Application
      tags:
        - webproperty
      parameters:
        - name: propertyName
          in: path
          description: PropertyName for the SPA
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []
  /webproperty/applications/validate:
    post:
      summary: Create a API Key
      tags:
        - webproperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiresIn:
                  type: string
                propertyName:
                  type: string
                env:
                  type: array
                  items:
                    $ref: "#/components/schemas/Env"
                label:
                  type: string
                createdBy:
                  type: string
              required:
                - expiresIn
                - propertyName
                - env
                - label
                - createdBy
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []
  /webproperty/alias:
    post:
      summary: Create a Web Property
      tags:
        - webproperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                propertyTitle:
                  type: string
                propertyName:
                  type: string
                env:
                  type: string
                url:
                  type: string
                type:
                  type: string
                deploymentConnectionType:
                  type: string
                createdBy:
                  type: string
              required:
                - propertyTitle
                - propertyName
                - env
                - url
                - type
                - deploymentConnectionType
                - createdBy
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []
  /webproperty/alias/list:
    get:
      summary: Get the List of the Properties
      tags:
        - webproperty
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []
  /webproperty/alias/list/{propertyName}:
    get:
      summary: Get the List for the perticular property (includes env)
      tags:
        - webproperty
      parameters:
        - name: propertyName
          in: path
          description: Provide the PropertyName
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []

  /event/fetch/analytics/all:
    post:
      summary: Count, Chart & Activities for all the web-properties
      tags:
        - event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                chart:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
                count:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
                activites:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []
  /event/fetch/analytics/filter:
    post:
      summary: Count, Chart & Activities for perticular the WebProperty
      tags:
        - event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                chart:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
                count:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
                activites:
                  type: object
                  items:
                    $ref: "#/components/schemas/Event"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/WebProperties"
      security:
        - bearerAuth: []

components:
  schemas:
    Application:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        ref:
          type: string
        timestamp:
          type: string
          format: date
          readOnly: true
      required:
        - name
        - path
        - ref
    APIKey:
      type: object
      properties:
        label:
          type: string
        shortKey:
          type: string
          readOnly: true
        hashKey:
          type: string
          readOnly: true
        expiredDate:
          type: string
          format: date
          nullable: true
        createdAt:
          type: string
          format: date
          readOnly: true
      required:
        - label
    APIResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
            - error
        data:
          oneOf:
            - $ref: "#/components/schemas/Application"
            - $ref: "#/components/schemas/APIKey"
            - type: array
              items:
                $ref: "#/components/schemas/Application"
            - type: array
              items:
                $ref: "#/components/schemas/APIKey"
        message:
          type: string

    WebProperties:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
            - error
        message:
          type: string
    Event:
      type: object
      properties:
        propertyName:
          type: string
        spaName:
          type: string
    Env:
      type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
